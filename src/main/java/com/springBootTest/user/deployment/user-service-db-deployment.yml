apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  selector:
    matchLabels:
      app: mysql
      tier: database
  strategy:
    type: recreate  
  template:
    metadata:
      labels:
        app: mysql
        tier: database
    spec:
      containers:
      - name: users-db
        image: mysql:latest
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
        env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: users-mysql-secret
                  key: password
            - name: MYSQL_DATABASE # Setting Database Name from a 'ConfigMap'
              valueFrom:
                configMapKeyRef:
                  name: users-db-config
                  key: dbName    
        ports:
        - containerPort: 3306
          name: users-mysql-port
        volumeMounts:        # Mounting voulume obtained from Persistent Volume Claim
            - name: users-mysql-initdb 
              mountPath: /docker-entrypoint-initdb.d
            - name: users-mysql-persistent-storage
              mountPath: /var/lib/mysql #This is the path in the container on which the mounting will take place.
              subPath: "mysql"  
    volumes:
      - name: users-mysql-initdb
        configMap: 
          name: users-mysql-initdb-config  
      - name: mysql-persistent-storage # Obtaining 'vloume' from PVC
        persistentVolumeClaim:
          claimName: users-mysql-pv-claim

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: users-mysql-initdb-config
data:
  users.init.sql: |
    CREATE DATABASE IF NOT EXISTS usersDb;
    USE usersDb;

---

# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mysql
    tier: database  

